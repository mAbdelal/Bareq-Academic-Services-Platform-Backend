version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    build:
      context: .
    container_name: express_app
    restart: unless-stopped
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      DATABASE_URL: ${DATABASE_URL}
      FRONTEND_URL: ${FRONTEND_URL}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_ACCESS_EXPIRES_IN: ${JWT_ACCESS_EXPIRES_IN}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN}
      RESET_TOKEN_EXPIRES_IN: ${RESET_TOKEN_EXPIRES_IN}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      PLATFORM_COMMISSION_RATE: ${PLATFORM_COMMISSION_RATE}
      DISPUTE_PENALTY_RATE: ${DISPUTE_PENALTY_RATE}
    command: npm run dev

  adminer:
    image: adminer
    container_name: adminer_container
    restart: always
    ports:
      - "8000:8080"
    depends_on:
      - postgres

volumes:
  postgres_data:
