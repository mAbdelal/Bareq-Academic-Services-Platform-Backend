// prisma/seedAcademicSubcategorys.js
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function seedAcademicSubcategorys() {
    // Fetch all academic categories with their ids
    const categories = await prisma.academicCategorys.findMany();

    if (!categories.length) {
        console.error('üö´ No AcademicCategorys found. Please seed categories first.');
        return;
    }

    // Example subcategories data linked by category name
    const subcategoriesData = [
        {
            categoryName: 'ÿßŸÑŸáŸÜÿØÿ≥ÿ©',
            subcategories: [
                { name: 'ÿßŸÑŸáŸÜÿØÿ≥ÿ© ÿßŸÑŸÖÿØŸÜŸäÿ©', description: 'ÿ™ÿµŸÖŸäŸÖ Ÿàÿ®ŸÜÿßÿ° ÿßŸÑÿ®ŸÜŸäÿ© ÿßŸÑÿ™ÿ≠ÿ™Ÿäÿ© ŸÖÿ´ŸÑ ÿßŸÑÿ¨ÿ≥Ÿàÿ± ŸàÿßŸÑŸÖÿ®ÿßŸÜŸä' },
                { name: 'ÿßŸÑŸáŸÜÿØÿ≥ÿ© ÿßŸÑŸÉŸáÿ±ÿ®ÿßÿ¶Ÿäÿ©', description: 'ÿØÿ±ÿßÿ≥ÿ© Ÿàÿ™ÿµŸÖŸäŸÖ ÿßŸÑÿ£ŸÜÿ∏ŸÖÿ© ÿßŸÑŸÉŸáÿ±ÿ®ÿßÿ¶Ÿäÿ© ŸàÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸäÿ©' },
                { name: 'ÿßŸÑŸáŸÜÿØÿ≥ÿ© ÿßŸÑŸÖŸäŸÉÿßŸÜŸäŸÉŸäÿ©', description: 'ÿ™ÿµŸÖŸäŸÖ Ÿàÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿ£ŸÜÿ∏ŸÖÿ© ÿßŸÑŸÖŸäŸÉÿßŸÜŸäŸÉŸäÿ©' },
            ],
        },
        {
            categoryName: 'ÿßŸÑÿπŸÑŸàŸÖ ÿßŸÑÿ∑ÿ®Ÿäÿ©',
            subcategories: [
                { name: 'ÿßŸÑÿ∑ÿ® ÿßŸÑÿ®ÿ¥ÿ±Ÿä', description: 'ÿßŸÑÿØÿ±ÿßÿ≥ÿ© ÿßŸÑÿ∑ÿ®Ÿäÿ© ŸàÿßŸÑÿπŸÑÿßÿ¨Ÿäÿ© ŸÑŸÑÿ•ŸÜÿ≥ÿßŸÜ' },
                { name: 'ÿ∑ÿ® ÿßŸÑÿ£ÿ≥ŸÜÿßŸÜ', description: 'ÿßŸÑÿπŸÜÿßŸäÿ© ÿ®ÿµÿ≠ÿ© ÿßŸÑŸÅŸÖ ŸàÿßŸÑÿ£ÿ≥ŸÜÿßŸÜ' },
                { name: 'ÿßŸÑÿ™ŸÖÿ±Ÿäÿ∂', description: 'ÿ±ÿπÿßŸäÿ© ÿßŸÑŸÖÿ±ÿ∂Ÿâ ŸàÿßŸÑÿØÿπŸÖ ÿßŸÑÿ∑ÿ®Ÿä' },
            ],
        },
        {
            categoryName: 'ÿπŸÑŸàŸÖ ÿßŸÑÿ≠ÿßÿ≥Ÿàÿ®',
            subcategories: [
                { name: 'ÿ®ÿ±ŸÖÿ¨ÿ© ÿßŸÑÿ™ÿ∑ÿ®ŸäŸÇÿßÿ™', description: 'ÿ™ÿ∑ŸàŸäÿ± ÿ™ÿ∑ÿ®ŸäŸÇÿßÿ™ ÿ≥ÿ∑ÿ≠ ÿßŸÑŸÖŸÉÿ™ÿ® ŸàÿßŸÑŸàŸäÿ®' },
                { name: 'ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä', description: 'ÿØÿ±ÿßÿ≥ÿ© Ÿàÿ™ÿµŸÖŸäŸÖ ÿ£ŸÜÿ∏ŸÖÿ© ÿ∞ŸÉŸäÿ©' },
                { name: 'ÿ¥ÿ®ŸÉÿßÿ™ ÿßŸÑÿ≠ÿßÿ≥Ÿàÿ®', description: 'ÿ™ÿµŸÖŸäŸÖ Ÿàÿ•ÿØÿßÿ±ÿ© ÿßŸÑÿ¥ÿ®ŸÉÿßÿ™' },
            ],
        },
    ];

    for (const categoryData of subcategoriesData) {
        const category = categories.find(c => c.name === categoryData.categoryName);
        if (!category) {
            console.warn(`‚ö†Ô∏è Category "${categoryData.categoryName}" not found. Skipping its subcategories.`);
            continue;
        }

        for (const subcat of categoryData.subcategories) {
            try {
                await prisma.academicSubcategorys.upsert({
                    where: {
                        category_id_name: {
                            category_id: category.id,
                            name: subcat.name,
                        }
                    },
                    update: {},
                    create: {
                        category_id: category.id,
                        name: subcat.name,
                        description: subcat.description,
                        is_active: true,
                    }
                });
                console.log(`‚úÖ Seeded subcategory "${subcat.name}" under "${category.name}"`);
            } catch (error) {
                console.error(`‚ùå Failed to seed subcategory "${subcat.name}":`, error);
            }
        }
    }

    console.log('‚úÖ AcademicSubcategorys seeding complete');
}

module.exports = seedAcademicSubcategorys;